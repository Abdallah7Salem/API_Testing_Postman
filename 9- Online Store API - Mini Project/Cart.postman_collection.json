{
	"info": {
		"_postman_id": "7c49acc3-6def-4cb3-867a-87cebc970ceb",
		"name": "Cart",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40215593"
	},
	"item": [
		{
			"name": "GetAllCartItems",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate the response to be a non-empty array */\r",
							"pm.test(\"Response is an array and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"const expected_schema =\r",
							"{\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate JSON Schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(expected_schema);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts",
					"host": [
						"{{base_url}}carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleCartItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate response to be a non-empty object */\r",
							"pm.test(\"Response is an object and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('object').and.not.to.be.empty;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"/* Validate returned Cart ID matches {{cart_id}} */\r",
							"pm.test(\"Validate returned Cart ID matches {{cart_id}}\", ()=> {\r",
							"    pm.expect(json_response.id).to.be.eql(pm.iterationData.get(\"id\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/{{id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetLimitedCartItems",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate the response to be a non-empty array */\r",
							"pm.test(\"Response is an array and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"/* Validate the JSON Schema */\r",
							"const expected_schema = \r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"for (let i = 0; i < (pm.collectionVariables.get(\"limit\")); i++)\r",
							"{\r",
							"    pm.test(\"Expected JSON schema validation for id: \" + json_response[i].id, function() {\r",
							"    pm.expect(json_response[i]).to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							"/* Validate the Number of Returned Products matches the Limit Value */\r",
							"pm.test(\"Validate the number of returned products to be the same as limit value\", ()=> {\r",
							"    pm.expect(json_response.length).to.be.eql(parseInt(pm.collectionVariables.get(\"limit\")));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?limit={{limit}}",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "limit",
							"value": "{{limit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSortedCartItems",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate the response to be a non-empty array */\r",
							"pm.test(\"Response is an array and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"const expected_schema =\r",
							"{\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate JSON Schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"\r",
							"/* Validate Cart Items to Sorted in the Expected Order */\r",
							"pm.test(\"Validate that response is sorted\", ()=> {\r",
							"    if((pm.collectionVariables.get(\"sort\")) == \"asc\")\r",
							"    {\r",
							"        pm.expect(json_response[0].id).to.be.eql(1);\r",
							"    }\r",
							"    else if ((pm.collectionVariables.get(\"sort\")) == \"desc\")\r",
							"    {\r",
							"        pm.expect(json_response[0].id).to.be.eql(7);\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?sort={{sort}}",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "sort",
							"value": "{{sort}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetCartItemsInDateRange",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate the response to be a non-empty array */\r",
							"pm.test(\"Response is an array and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"/* Validate the JSON Schema */\r",
							"const expected_schema = \r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"for (let i = 0; i < (json_response.count()); i++)\r",
							"{\r",
							"    pm.test(\"Expected JSON schema validation for id: \" + json_response[i].id, function() {\r",
							"    pm.expect(json_response[i]).to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"}\r",
							"\r",
							"/* Validate the Cart Items to Fall within the Specified Date Range */\r",
							"for(let i = 0; i < json_response.count(); i++)\r",
							"{\r",
							"    var date = new Date(json_response[i].date);\r",
							"    console.log(date);\r",
							"    var from = new Date(\"2020-01-01\");\r",
							"    var to = new Date(\"2020-01-30\");\r",
							"\r",
							"    pm.test(\"Date within range for product with id: \" + json_response[i].id, () => {\r",
							"        if (from >= date && date >= to) \r",
							"        {\r",
							"            pm.expect.fail('Dates not in Range');\r",
							"        }\r",
							"});\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?startdate=2020-01-01&enddate=2020-01-30",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "startdate",
							"value": "2020-01-01"
						},
						{
							"key": "enddate",
							"value": "2020-01-30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUserSpecificCartItems",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate the response to be a non-empty array */\r",
							"pm.test(\"Response is an array and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('array').and.not.be.empty;\r",
							"});\r",
							"\r",
							"/* Validate the JSON Schema */\r",
							"const expected_schema = \r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"for (let i = 0; i < (json_response.length); i++)\r",
							"{\r",
							"    pm.test(\"Expected JSON schema validation for id: \" + json_response[i].id, function() {\r",
							"    pm.expect(json_response[i]).to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"}\r",
							"\r",
							"for(let i = 0; i < (json_response.length); i++)\r",
							"{\r",
							"    pm.test(\"Validate cart item with ID \" + json_response[i].id + \" to belong to the specified user\", ()=> {\r",
							"        pm.expect(json_response[i].userId).to.be.eql(pm.iterationData.get(\"userId\"));\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/user/{{userId}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "AddToCart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate response to be a non-empty object */\r",
							"pm.test(\"Response is an object and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('object').and.not.to.be.empty;\r",
							"});\r",
							"\r",
							"const expected_schema =\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate JSON Schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"\r",
							"/* Validate returned Cart userId matches the userId in the Request Body */\r",
							"pm.test(\"Validate returned Cart userId matches userId in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.userId).to.be.eql(parseInt(pm.iterationData.get(\"userId\")));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart date matches the date in the Request Body */\r",
							"pm.test(\"Validate returned Cart date matches date in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.date).to.be.eql(pm.iterationData.get(\"date\"));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart productId matches the productId in the Request Body */\r",
							"pm.test(\"Validate returned Cart productId matches productId in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.products[0].productId).to.be.eql(parseInt(pm.iterationData.get(\"productId\")));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart quantity matches the quantity in the Request Body */\r",
							"pm.test(\"Validate returned Cart quantity matches quantity in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.products[0].quantity).to.be.eql(pm.iterationData.get(\"quantity\"));\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{userId}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{productId}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n   \r\n\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts",
					"host": [
						"{{base_url}}carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateCart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate response to be a non-empty object */\r",
							"pm.test(\"Response is an object and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('object').and.not.to.be.empty;\r",
							"});\r",
							"\r",
							"const expected_schema =\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate JSON Schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"/* Validate returned Cart userId matches the userId in the Request Body */\r",
							"pm.test(\"Validate returned Cart userId matches userId in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.userId).to.be.eql(parseInt(pm.iterationData.get(\"userId\")));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart date matches the date in the Request Body */\r",
							"pm.test(\"Validate returned Cart date matches date in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.date).to.be.eql(pm.iterationData.get(\"date\"));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart productId matches the productId in the Request Body */\r",
							"pm.test(\"Validate returned Cart productId matches productId in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.products[0].productId).to.be.eql(parseInt(pm.iterationData.get(\"productId\")));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart quantity matches the quantity in the Request Body */\r",
							"pm.test(\"Validate returned Cart quantity matches quantity in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.products[0].quantity).to.be.eql(pm.iterationData.get(\"quantity\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{userId}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{productId}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateCartPartially",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate response to be a non-empty object */\r",
							"pm.test(\"Response is an object and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('object').and.not.to.be.empty;\r",
							"});\r",
							"\r",
							"const expected_schema =\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate JSON Schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"/* Validate returned Cart userId matches the userId in the Request Body */\r",
							"pm.test(\"Validate returned Cart userId matches userId in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.userId).to.be.eql(parseInt(pm.iterationData.get(\"userId\")));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart date matches the date in the Request Body */\r",
							"pm.test(\"Validate returned Cart date matches date in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.date).to.be.eql(pm.iterationData.get(\"date\"));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart productId matches the productId in the Request Body */\r",
							"pm.test(\"Validate returned Cart productId matches productId in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.products[0].productId).to.be.eql(parseInt(pm.iterationData.get(\"productId\")));\r",
							"});\r",
							"\r",
							"/* Validate returned Cart quantity matches the quantity in the Request Body */\r",
							"pm.test(\"Validate returned Cart quantity matches quantity in the Request Body\", ()=> {\r",
							"    pm.expect(json_response.products[0].quantity).to.be.eql(pm.iterationData.get(\"quantity\"));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{userId}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{productId}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteCart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json_response = pm.response.json();\r",
							"\r",
							"/* Validate response to be a non-empty object */\r",
							"pm.test(\"Response is an object and not empty\", function() {\r",
							"    pm.expect(json_response).to.be.an('object').and.not.to.be.empty;\r",
							"});\r",
							"\r",
							"const expected_schema =\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"\r",
							"pm.test(\"Validate JSON Schema\", ()=> {\r",
							"    pm.response.to.have.jsonSchema(expected_schema);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/{{id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "cart_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "4",
			"type": "string"
		},
		{
			"key": "date",
			"value": "03-02-2022",
			"type": "string"
		},
		{
			"key": "quantity",
			"value": "3",
			"type": "string"
		},
		{
			"key": "limit",
			"value": "4",
			"type": "string"
		},
		{
			"key": "sort",
			"value": "asc",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "5",
			"type": "string"
		}
	]
}